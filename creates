create database tagger;

create user 'tagger_client'@'localhost' identified by 'probablyNotTheRealPassword';
grant insert, select, update on tagger.* to 'tagger_client'@'localhost';
FLUSH PRIVILEGES;

create table tagger.tagger_articleText (
    article_id integer not null,
    parsed DateTime not null,
    article_text mediumtext not null,
    primary key (article_id)
);

create table tagger.tagger_article (
    hn_id integer not null,
    title varchar(1500),
    state int,
    parsed DateTime,
    article_url varchar(1000),
    score int,
    number_of_comments int,
    submitter varchar(15),
    timestamp int,
    rank int,
    tagged TINYINT(1),
    primary key (hn_id)
);

create table tagger.tagger_user (
    id varchar(15) not null,
    opt_out bit not null default 0,
    primary key (id)
);

create table tagger.tagger_item (
    hn_id integer not null,
    submitter varchar(15) not null,
    type varchar(10) not null,
    parent int,
    top_parent int,
    primary key (hn_id)
);

create table tagger.tagger_tag (
    id int not null auto_increment,
    name varchar(300),
    lowercase_name varchar(300),
    primary key (id)
);

create table tagger.tagger_article_tags(
    id int not null auto_increment,
    article_id integer not null,
    tag_id integer not null,
    primary key (id)
);


insert into tagger_articleText (article_id, parsed, prediction_input)
select hn_id, parsed, prediction_input from tagger_article;

